---
// Explore page with full 3D experience
import ExploreScene from '../components/ExploreScene.tsx'
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<title>Explore - Freshjelly's Ocean</title>
		<meta name="description" content="Explore the depths of the ocean" />
		
		<style>
			* {
				margin: 0;
				padding: 0;
				box-sizing: border-box;
			}
			
			body {
				font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
				overflow: hidden;
				background: linear-gradient(180deg, #191970 0%, #0a0a2e 100%);
				min-height: 100vh;
			}
			
			.explore-container {
				position: relative;
				width: 100vw;
				height: 100vh;
			}
			
			.ui-overlay {
				position: fixed;
				top: 0;
				left: 0;
				width: 100%;
				z-index: 100;
				padding: 2rem;
				background: linear-gradient(180deg, rgba(0,0,0,0.5) 0%, transparent 100%);
				pointer-events: none;
			}
			
			.ui-header {
				display: flex;
				justify-content: space-between;
				align-items: center;
				pointer-events: all;
			}
			
			.back-button {
				display: inline-flex;
				align-items: center;
				gap: 0.5rem;
				padding: 0.75rem 1.5rem;
				background: rgba(255, 255, 255, 0.1);
				backdrop-filter: blur(10px);
				border: 1px solid rgba(255, 255, 255, 0.2);
				border-radius: 25px;
				color: white;
				text-decoration: none;
				font-weight: 500;
				transition: all 0.3s ease;
				font-size: 0.9rem;
			}
			
			.back-button:hover {
				background: rgba(255, 255, 255, 0.2);
				transform: translateY(-2px);
			}
			
			.depth-indicator {
				color: white;
				font-size: 1.2rem;
				font-weight: 300;
				text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
			}
			
			.controls-hint {
				position: fixed;
				bottom: 2rem;
				left: 50%;
				transform: translateX(-50%);
				color: white;
				font-size: 0.9rem;
				text-align: center;
				opacity: 0.8;
				animation: fadeInUp 1s ease-out;
			}
			
			.dive-button {
				position: fixed;
				bottom: 2rem;
				right: 2rem;
				padding: 1rem 2rem;
				background: linear-gradient(135deg, #4fc3f7, #29b6f6);
				border: none;
				border-radius: 30px;
				color: white;
				font-size: 1rem;
				font-weight: 600;
				cursor: pointer;
				transition: all 0.3s ease;
				box-shadow: 0 10px 30px rgba(79, 195, 247, 0.3);
				animation: pulse 2s infinite;
			}
			
			.dive-button:hover {
				transform: translateY(-3px);
				box-shadow: 0 15px 40px rgba(79, 195, 247, 0.4);
			}
			
			@keyframes fadeInUp {
				from {
					opacity: 0;
					transform: translate(-50%, 20px);
				}
				to {
					opacity: 1;
					transform: translate(-50%, 0);
				}
			}
			
			@keyframes pulse {
				0%, 100% {
					transform: scale(1);
				}
				50% {
					transform: scale(1.05);
				}
			}
			
			.scene-container {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
			}
			
			.objects-panel {
				position: fixed;
				top: 50%;
				right: 2rem;
				transform: translateY(-50%);
				display: flex;
				flex-direction: column;
				gap: 1rem;
				pointer-events: all;
			}
			
			.object-button {
				width: 60px;
				height: 60px;
				border-radius: 50%;
				background: rgba(255, 255, 255, 0.1);
				backdrop-filter: blur(10px);
				border: 2px solid rgba(255, 255, 255, 0.2);
				color: white;
				font-size: 1.5rem;
				cursor: pointer;
				transition: all 0.3s ease;
				display: flex;
				align-items: center;
				justify-content: center;
			}
			
			.object-button:hover {
				background: rgba(255, 255, 255, 0.2);
				transform: scale(1.1);
			}
			
			@media (max-width: 768px) {
				.ui-overlay {
					padding: 1rem;
				}
				
				.objects-panel {
					flex-direction: row;
					right: 50%;
					top: auto;
					bottom: 6rem;
					transform: translateX(50%);
				}
				
				.controls-hint {
					display: none;
				}
			}
		</style>
	</head>
	<body>
		<div class="explore-container">
			<!-- 3D Scene takes full screen -->
			<div class="scene-container">
				<ExploreScene client:load />
			</div>
			
			<!-- UI Overlay -->
			<div class="ui-overlay">
				<div class="ui-header">
					<a href="/" class="back-button">
						‚Üê Back to Surface
					</a>
					<div class="depth-indicator">
						<span id="depth">0</span>m deep
					</div>
				</div>
			</div>
			
			<!-- Interactive Objects Panel -->
			<div class="objects-panel">
				<button class="object-button" title="Treasure Chest">üíé</button>
				<button class="object-button" title="Message Bottle">üìú</button>
				<button class="object-button" title="Coral">ü™∏</button>
				<button class="object-button" title="Fish">üê†</button>
			</div>
			
			<!-- Dive Control -->
			<button class="dive-button" id="dive-btn">
				ü§ø Dive Deeper
			</button>
			
			<!-- Controls Hint -->
			<div class="controls-hint">
				Use mouse to look around ‚Ä¢ Scroll to zoom ‚Ä¢ Click objects to interact
			</div>
		</div>
		
		<script>
			// Dive animation
			let currentDepth = 0;
			const maxDepth = 100;
			const depthDisplay = document.getElementById('depth');
			const diveBtn = document.getElementById('dive-btn');
			
			diveBtn?.addEventListener('click', () => {
				currentDepth = Math.min(currentDepth + 10, maxDepth);
				if (depthDisplay) {
					depthDisplay.textContent = currentDepth.toString();
				}
				
				// Change background gradient based on depth
				const darkness = currentDepth / maxDepth;
				document.body.style.background = `linear-gradient(180deg, 
					hsl(240, ${60 - darkness * 40}%, ${20 - darkness * 15}%) 0%, 
					hsl(240, ${80 - darkness * 30}%, ${10 - darkness * 8}%) 100%)`;
				
				// Update button text
				if (currentDepth >= maxDepth && diveBtn) {
					diveBtn.textContent = 'üèä Return to Surface';
					diveBtn.onclick = () => {
						currentDepth = 0;
						if (depthDisplay) depthDisplay.textContent = '0';
						document.body.style.background = 'linear-gradient(180deg, #191970 0%, #0a0a2e 100%)';
						diveBtn.textContent = 'ü§ø Dive Deeper';
					};
				}
			});
			
			// Object interactions
			document.querySelectorAll('.object-button').forEach(btn => {
				btn.addEventListener('click', (e) => {
					const target = e.currentTarget as HTMLElement;
					target.style.animation = 'pulse 0.5s ease';
					setTimeout(() => {
						target.style.animation = '';
					}, 500);
					
					// You can add more interaction logic here
					console.log('Interacted with:', target.getAttribute('title'));
				});
			});
		</script>
	</body>
</html>